<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    
    <context:component-scan base-package="com.javasm" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:include-filter>
    </context:component-scan>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"></property><!--对于中文文件名的支持-->
        <property name="maxInMemorySize" value="10000000"></property><!--临时文件最大大小-->
        <property name="maxUploadSize" value="50000000"></property><!--允许上传文件的最大-->
        <property name="uploadTempDir" value="/upload/tmp"></property><!--临时文件的保存路径-->
    </bean>
    
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8"></property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:default-servlet-handler></mvc:default-servlet-handler>

    <bean id="logAspect" class="com.javasm.log.LogAspect"></bean>

    <aop:config>
        <!--定义切面-->
        <aop:aspect ref="logAspect" >
            <!--切入点(executaion(* com.javasm.*.*(..)))-->
            <aop:pointcut id="logPointcut" expression="@annotation(com.javasm.log.LogAnno)"></aop:pointcut>
            <!--织入-->
            <aop:around method="logAdvice" pointcut-ref="logPointcut"></aop:around>
        </aop:aspect>
    </aop:config>


</beans>